Clear : 
amidi -p hw:2,0,0 -S 'F0 00 62 42 00 00 00 F7'

Oscillator settings:
	cmd : SYSEX_BB_SETOSCILLATOR ( 10 )
		oscnumber : oscillator number
		subcmd : SYSEX_BB_SETOSCFREQ ( 00 )
				ref_channel : reference channel for sampling frequency, 0 or 1
				freq : ignored unless flags is not OSCILLATOR_FREE_RUNNING in <flags>,
						<freq*10000> <freq*1000> <freq*100> <freq*10> <freq*1> 
		subcmd : SYSEX_BB_SETOSCVOL ( 01 )
				volume : volume : 0..127
		subcmd : SYSEX_BB_SETOSCWAVE ( 02 )
				waveform  : SINE, TRIANGLE, SQUARE : 0,1,2
		subcmd : SYSEX_BB_SETOSCPHASE ( 03 )
				phase : number of the volume controller, 0..127.ignored if waveform is SINE,defines the duty ( 64 is 50% )
		subcmd : SYSEX_BB_SETOSCGROUP ( 04 )
				group : group this oscillator belongs
		subcmd : SYSEX_BB_SETOSCFLAG ( 05 )
				flag : 	OSCILLATOR_DISABLED 		: oscillator off 	( 00 )
						OSCILLATOR_MIDI 			: listen midi 		( 01 )
						OSCILLATOR_FREE_RUNNING 	: always enabled 	( 02 )
						OSCILLATOR_LOCAL_CONTROL 	: local controller 	( 60 .. 6f )
		SYSEX Message :
				F0 00 62 42 <cmd> <oscnumber > <subcmd> <subcmd parameter> .. <F7>
	
		Example1 : oscillator 0 initialized at 2345Hz ref channel 0
		amidi -p hw:2,0,0 -S 'F0 00 62 42 10 00 00 30 32 33 34 35 F7'
				 : same oscillator 0 initialized at 1234Hz ref channel 0
		amidi -p hw:2,0,0 -S 'F0 00 62 42 10 00 00 30 31 32 33 34 F7'
				 : oscillator 1 initialized at 1600Hz ref channel 0
		amidi -p hw:2,0,0 -S 'F0 00 62 42 10 01 00 30 31 36 30 30 F7'
		Example2 : oscillator 0 wave SINE 
		amidi -p hw:2,0,0 -S 'F0 00 62 42 10 00 01 00 F7'
		Example3 : oscillator 0 volume 127 
		amidi -p hw:2,0,0 -S 'F0 00 62 42 10 00 02 7F F7'
		Example4 : oscillator 0 phase 180 
		amidi -p hw:2,0,0 -S 'F0 00 62 42 10 00 03 7F F7'
		Example5 : oscillator 0 group 0 
		amidi -p hw:2,0,0 -S 'F0 00 62 42 10 00 04 7F F7'
		Example5 : oscillator set as midi 
		amidi -p hw:2,0,0 -S 'F0 00 62 42 10 00 05 01 F7'

Components Management:
	cmd : SYSEX_BB_COMP_INSERT ( 20 )
		channel : can be 0 or 1 (30 or 31 ), is the logical output pipe. Has no relations with the physical output channel.
		component : component id, see below
		pipein0 : number of pipe in 0, see below
		pipein1 : number of pipe in 1, see below
		pipeout : number of pipe out, see below
		controller0 : controller type, midi if < 127 , local if 127:191 , from lfo if > 192
		controller1 : controller type, midi if < 127 , local if 127:191 , from lfo if > 192
		parameter0 : depends on component, see below
		parameter1 : depends on component, see below
		
		component id : 
						0 : echo : replicates pipein0 to pipeout, has no controllers
						1 : mixer : mixes pipein0 with pipein1 , controller 0 set volume for pipe0, controller 1 set volume for pipe1
						2 : fir : applies fir on pipein0, table is indexed by parameter0, controller 0 set output volume
						3 : ring : modulate pipein0 with pipein1 , controller 0 set volume for pipe0, controller 1 set volume for pipe1
						4 : vca : attenuator on pipein0 to pipeout, controller 0 set attenuation for pipe0
						5 : lfo out : has no pipein0 and pipein1 , output on pipeout, controller 0 set frequency, controller 1 set volume,
								note : lfo waveform and phase must be set by lfo commands
		

